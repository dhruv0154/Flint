// ─────────────────────────────────────────────────────────────────────────────
// Mixed Array & String Method Showcase
// ─────────────────────────────────────────────────────────────────────────────

// 1. Array methods: length, push, pop, indexing, assignment
let arr = ["foo", "bar"];
print("Initial arr: ", arr, "\n");

print("arr.length = ", arr.length, "\n");

arr.push("baz");
print("After arr.push(\"baz\"): ", arr, "\n");

let popped = arr.pop();
print("arr.pop() returned: ", popped, "\n");
print("Arr now: ", arr, "\n");

// Indexed assignment
arr[1] = "qux";
print("After arr[1] = \"qux\": ", arr, "\n");

// Indexed access
print("arr[0] = ", arr[0], "\n\n");


// 2. Nested arrays + mixed types
let nested = [1, ["a", "b"], true, nothing];
print("Nested array: ", nested, "\n");
print("nested[1][0] = ", nested[1][0], ", nested[2] = ", nested[2], "\n\n");


// 3. String methods: length, upper, lower, push, pop, indexing
let s = "Flint";
print("Original s: ", s, "\n");

print("s.length = ", s.length, "\n");
print("s.upper() = ", s.upper(), "\n");
print("s.lower() = ", s.lower(), "\n");

print("s[2] = ", s[2], "\n");

let s2 = s.push("Lang");
print("s.push(\"Lang\") = ", s2, "\n");
print("Original s still = ", s, "\n");

let lastChar = s.pop();
print("s.pop() = ", lastChar, "\n");
print("After pop, s still = ", s, "\n\n");


// 4. Combination: build an array of transformed strings
let words = ["alpha", "beta", "gamma"];
print("Words: ", words, "\n");

let caps = [];  
for (let i = 0; i < words.length; i = i + 1) {
  caps.push(words[i].upper());
}
print("Uppercased: ", caps, "\n");

caps.pop();
print("After pop: ", caps, "\n");

// 5. Edge‑cases
let emptyArr = [];
print("emptyArr.length = ", emptyArr.length, "\n");
// emptyArr.pop();  // would RuntimeError
emptyArr.push("only");
print("emptyArr after push: ", emptyArr, "\n\n");

let emptyStr = "";
print("emptyStr.length = ", emptyStr.length, "\n");
print("emptyStr.pop() = '", emptyStr.pop(), "'\n");  // returns ""
